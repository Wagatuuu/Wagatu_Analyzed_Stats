session server;

/* Start checking for existence of each input table */
exists0=doesTableExist("Public", "id-1677963775130-119-PRIMARYEDUCATIONSHEET11-0");
if exists0 == 0 then do;
  print "Table "||"Public"||"."||"id-1677963775130-119-PRIMARYEDUCATIONSHEET11-0" || " does not exist.";
  print "UserErrorCode: 100";
  exit 1;
end;
print "Input table: "||"Public"||"."||"id-1677963775130-119-PRIMARYEDUCATIONSHEET11-0"||" found.";
/* End checking for existence of each input table */


  _dp_inputTable="id-1677963775130-119-PRIMARYEDUCATIONSHEET11-0";
  _dp_inputCaslib="Public";

  _dp_outputTable="id-1677963775130-119-PRIMARYEDUCATIONSHEET11-1";
  _dp_outputCaslib="Public";

dataStep.runCode result=r status=rc / code='/* BEGIN data step with the output table                                           data */
data "id-1677963775130-119-PRIMARYEDUCATIONSHEET11-1" (caslib="Public" promote="no");


    /* Set the input                                                                set */
    set "id-1677963775130-119-PRIMARYEDUCATIONSHEET11-0" (caslib="Public"  );

    /* BEGIN statement 192d33e0_da9c_4744_8ec9_c78725f2bd49               dqstandardize */
    "Divisions_AdditionalInfo_Extraction_ID"n = dqstandardize ("Divisions_AdditionalInfo_Extraction_ID"n, "Address", "ENUSA");
    /* END statement 192d33e0_da9c_4744_8ec9_c78725f2bd49                 dqstandardize */

/* END data step                                                                    run */
run;
';
if rc.statusCode != 0 then do;
  print "Error executing datastep";
  exit 2;
end;

dropTableIfExists("Public", "0d22d520-9212-448f-9a7a-3c38d8688ace");

function doesTableExist(casLib, casTable);
  table.tableExists result=r status=rc / caslib=casLib table=casTable;
  tableExists = dictionary(r, "exists");
  return tableExists;
end func;

function dropTableIfExists(casLib,casTable);
  tableExists = doesTableExist(casLib, casTable);
  if tableExists != 0 then do;
    print "Dropping table: "||casLib||"."||casTable;
    table.dropTable result=r status=rc/ caslib=casLib table=casTable quiet=0;
    if rc.statusCode != 0 then do;
      exit();
    end;
  end;
end func;

/* Return list of columns in a table */
function columnList(casLib, casTable);
  table.columnInfo result=collist / table={caslib=casLib,name=casTable};
  ndimen=dim(collist['columninfo']);
  featurelist={};
  do i =  1 to ndimen;
    featurelist[i]=upcase(collist['columninfo'][i][1]);
  end;
  return featurelist;
end func;
WARNING: License for feature 'TKCAS SAS Cloud Analytic Services Server' has expired and will stop working in 31 days. Contact your installation representative to obtain a renewal.
NOTE: Active Session now server.
Input table: Public.id-1677963775130-119-PRIMARYEDUCATIONSHEET11-0 found.
WARNING: License for feature 'TKCAS SAS Cloud Analytic Services Server' has expired and will stop working in 31 days. Contact your installation representative to obtain a renewal.
